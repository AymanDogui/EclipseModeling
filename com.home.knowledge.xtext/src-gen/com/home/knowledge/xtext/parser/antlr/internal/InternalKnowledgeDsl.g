/*
 * generated by Xtext 2.10.0
 */
grammar InternalKnowledgeDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.home.knowledge.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.home.knowledge.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.home.knowledge.xtext.services.KnowledgeDslGrammarAccess;

}

@parser::members {

 	private KnowledgeDslGrammarAccess grammarAccess;

    public InternalKnowledgeDslParser(TokenStream input, KnowledgeDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Organisation";
   	}

   	@Override
   	protected KnowledgeDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleOrganisation
entryRuleOrganisation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrganisationRule()); }
	iv_ruleOrganisation=ruleOrganisation
	{ $current=$iv_ruleOrganisation.current; }
	EOF;

// Rule Organisation
ruleOrganisation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOrganisationAccess().getOrganisationAction_0(),
					$current);
			}
		)
		otherlv_1='Organisation'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrganisationAccess().getOrganisationKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrganisationAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrganisationRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.home.knowledge.xtext.KnowledgeDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getOrganisationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='currentProblem'
			{
				newLeafNode(otherlv_4, grammarAccess.getOrganisationAccess().getCurrentProblemKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrganisationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getOrganisationAccess().getCurrentProblemProblemCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='experiences'
			{
				newLeafNode(otherlv_6, grammarAccess.getOrganisationAccess().getExperiencesKeyword_5_0());
			}
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getOrganisationAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrganisationAccess().getExperiencesExperienceParserRuleCall_5_2_0());
					}
					lv_experiences_8_0=ruleExperience
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrganisationRule());
						}
						add(
							$current,
							"experiences",
							lv_experiences_8_0,
							"com.home.knowledge.xtext.KnowledgeDsl.Experience");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getOrganisationAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOrganisationAccess().getExperiencesExperienceParserRuleCall_5_3_1_0());
						}
						lv_experiences_10_0=ruleExperience
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrganisationRule());
							}
							add(
								$current,
								"experiences",
								lv_experiences_10_0,
								"com.home.knowledge.xtext.KnowledgeDsl.Experience");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getOrganisationAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getOrganisationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleExperience
entryRuleExperience returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExperienceRule()); }
	iv_ruleExperience=ruleExperience
	{ $current=$iv_ruleExperience.current; }
	EOF;

// Rule Experience
ruleExperience returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Experience'
		{
			newLeafNode(otherlv_0, grammarAccess.getExperienceAccess().getExperienceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExperienceAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExperienceRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.home.knowledge.xtext.KnowledgeDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getExperienceAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='problems'
			{
				newLeafNode(otherlv_3, grammarAccess.getExperienceAccess().getProblemsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getExperienceAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExperienceAccess().getProblemsProblemParserRuleCall_3_2_0());
					}
					lv_problems_5_0=ruleProblem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExperienceRule());
						}
						add(
							$current,
							"problems",
							lv_problems_5_0,
							"com.home.knowledge.xtext.KnowledgeDsl.Problem");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getExperienceAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExperienceAccess().getProblemsProblemParserRuleCall_3_3_1_0());
						}
						lv_problems_7_0=ruleProblem
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExperienceRule());
							}
							add(
								$current,
								"problems",
								lv_problems_7_0,
								"com.home.knowledge.xtext.KnowledgeDsl.Problem");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getExperienceAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='solutions'
		{
			newLeafNode(otherlv_9, grammarAccess.getExperienceAccess().getSolutionsKeyword_4());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getExperienceAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExperienceAccess().getSolutionsSolutionParserRuleCall_6_0());
				}
				lv_solutions_11_0=ruleSolution
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExperienceRule());
					}
					add(
						$current,
						"solutions",
						lv_solutions_11_0,
						"com.home.knowledge.xtext.KnowledgeDsl.Solution");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getExperienceAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExperienceAccess().getSolutionsSolutionParserRuleCall_7_1_0());
					}
					lv_solutions_13_0=ruleSolution
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExperienceRule());
						}
						add(
							$current,
							"solutions",
							lv_solutions_13_0,
							"com.home.knowledge.xtext.KnowledgeDsl.Solution");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getExperienceAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getExperienceAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleProblem
entryRuleProblem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProblemRule()); }
	iv_ruleProblem=ruleProblem
	{ $current=$iv_ruleProblem.current; }
	EOF;

// Rule Problem
ruleProblem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Problem'
		{
			newLeafNode(otherlv_0, grammarAccess.getProblemAccess().getProblemKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProblemAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProblemRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.home.knowledge.xtext.KnowledgeDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getProblemAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='solutions'
		{
			newLeafNode(otherlv_3, grammarAccess.getProblemAccess().getSolutionsKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getProblemAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProblemAccess().getSolutionsSolutionParserRuleCall_5_0());
				}
				lv_solutions_5_0=ruleSolution
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProblemRule());
					}
					add(
						$current,
						"solutions",
						lv_solutions_5_0,
						"com.home.knowledge.xtext.KnowledgeDsl.Solution");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getProblemAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProblemAccess().getSolutionsSolutionParserRuleCall_6_1_0());
					}
					lv_solutions_7_0=ruleSolution
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProblemRule());
						}
						add(
							$current,
							"solutions",
							lv_solutions_7_0,
							"com.home.knowledge.xtext.KnowledgeDsl.Solution");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getProblemAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getProblemAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleSolution
entryRuleSolution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSolutionRule()); }
	iv_ruleSolution=ruleSolution
	{ $current=$iv_ruleSolution.current; }
	EOF;

// Rule Solution
ruleSolution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSolutionAccess().getSolutionAction_0(),
					$current);
			}
		)
		otherlv_1='Solution'
		{
			newLeafNode(otherlv_1, grammarAccess.getSolutionAccess().getSolutionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSolutionAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSolutionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.home.knowledge.xtext.KnowledgeDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSolutionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='description'
			{
				newLeafNode(otherlv_4, grammarAccess.getSolutionAccess().getDescriptionKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSolutionAccess().getDescriptionEStringParserRuleCall_4_1_0());
					}
					lv_description_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSolutionRule());
						}
						set(
							$current,
							"description",
							lv_description_5_0,
							"com.home.knowledge.xtext.KnowledgeDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSolutionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
