/*
 * generated by Xtext 2.10.0
 */
grammar InternalRhDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.home.rh.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.home.rh.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.home.rh.xtext.services.RhDslGrammarAccess;

}
@parser::members {
	private RhDslGrammarAccess grammarAccess;

	public void setGrammarAccess(RhDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleCompany
entryRuleCompany
:
{ before(grammarAccess.getCompanyRule()); }
	 ruleCompany
{ after(grammarAccess.getCompanyRule()); } 
	 EOF 
;

// Rule Company
ruleCompany 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompanyAccess().getGroup()); }
		(rule__Company__Group__0)
		{ after(grammarAccess.getCompanyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmployee
entryRuleEmployee
:
{ before(grammarAccess.getEmployeeRule()); }
	 ruleEmployee
{ after(grammarAccess.getEmployeeRule()); } 
	 EOF 
;

// Rule Employee
ruleEmployee 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmployeeAccess().getGroup()); }
		(rule__Employee__Group__0)
		{ after(grammarAccess.getEmployeeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProject
entryRuleProject
:
{ before(grammarAccess.getProjectRule()); }
	 ruleProject
{ after(grammarAccess.getProjectRule()); } 
	 EOF 
;

// Rule Project
ruleProject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectAccess().getGroup()); }
		(rule__Project__Group__0)
		{ after(grammarAccess.getProjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DurationType
ruleDurationType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationTypeAccess().getAlternatives()); }
		(rule__DurationType__Alternatives)
		{ after(grammarAccess.getDurationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationTypeAccess().getHoursEnumLiteralDeclaration_0()); }
		('hours')
		{ after(grammarAccess.getDurationTypeAccess().getHoursEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDurationTypeAccess().getDaysEnumLiteralDeclaration_1()); }
		('days')
		{ after(grammarAccess.getDurationTypeAccess().getDaysEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__0__Impl
	rule__Company__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getCompanyAction_0()); }
	()
	{ after(grammarAccess.getCompanyAccess().getCompanyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__1__Impl
	rule__Company__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getCompanyKeyword_1()); }
	'Company'
	{ after(grammarAccess.getCompanyAccess().getCompanyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__2__Impl
	rule__Company__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getNameAssignment_2()); }
	(rule__Company__NameAssignment_2)
	{ after(grammarAccess.getCompanyAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__3__Impl
	rule__Company__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getCompanyAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__4__Impl
	rule__Company__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getGroup_4()); }
	(rule__Company__Group_4__0)
	{ after(grammarAccess.getCompanyAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__5__Impl
	rule__Company__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getProjectsAssignment_5()); }
	(rule__Company__ProjectsAssignment_5)*
	{ after(grammarAccess.getCompanyAccess().getProjectsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getCompanyAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Company__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group_4__0__Impl
	rule__Company__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getEmployeesKeyword_4_0()); }
	'employees'
	{ after(grammarAccess.getCompanyAccess().getEmployeesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group_4__1__Impl
	rule__Company__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getCompanyAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group_4__2__Impl
	rule__Company__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getEmployeesAssignment_4_2()); }
	(rule__Company__EmployeesAssignment_4_2)*
	{ after(grammarAccess.getCompanyAccess().getEmployeesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getRightCurlyBracketKeyword_4_3()); }
	'}'
	{ after(grammarAccess.getCompanyAccess().getRightCurlyBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Employee__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__0__Impl
	rule__Employee__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getEmployeeKeyword_0()); }
	'Employee'
	{ after(grammarAccess.getEmployeeAccess().getEmployeeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__1__Impl
	rule__Employee__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getNameAssignment_1()); }
	(rule__Employee__NameAssignment_1)
	{ after(grammarAccess.getEmployeeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__2__Impl
	rule__Employee__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getGroup_2()); }
	(rule__Employee__Group_2__0)?
	{ after(grammarAccess.getEmployeeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getGroup_3()); }
	(rule__Employee__Group_3__0)?
	{ after(grammarAccess.getEmployeeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Employee__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group_2__0__Impl
	rule__Employee__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getWeightKeyword_2_0()); }
	'weight'
	{ after(grammarAccess.getEmployeeAccess().getWeightKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getWeightAssignment_2_1()); }
	(rule__Employee__WeightAssignment_2_1)
	{ after(grammarAccess.getEmployeeAccess().getWeightAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Employee__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group_3__0__Impl
	rule__Employee__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getHeightKeyword_3_0()); }
	'height'
	{ after(grammarAccess.getEmployeeAccess().getHeightKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getHeightAssignment_3_1()); }
	(rule__Employee__HeightAssignment_3_1)
	{ after(grammarAccess.getEmployeeAccess().getHeightAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__0__Impl
	rule__Project__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
	'Project'
	{ after(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__1__Impl
	rule__Project__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getNameAssignment_1()); }
	(rule__Project__NameAssignment_1)
	{ after(grammarAccess.getProjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__2__Impl
	rule__Project__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getGroup_2()); }
	(rule__Project__Group_2__0)
	{ after(grammarAccess.getProjectAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__3__Impl
	rule__Project__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__4__Impl
	rule__Project__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getTasksAssignment_4()); }
	(rule__Project__TasksAssignment_4)*
	{ after(grammarAccess.getProjectAccess().getTasksAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group_2__0__Impl
	rule__Project__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getTypeKeyword_2_0()); }
	'type'
	{ after(grammarAccess.getProjectAccess().getTypeKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getTypeAssignment_2_1()); }
	(rule__Project__TypeAssignment_2_1)
	{ after(grammarAccess.getProjectAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
	'Task'
	{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
	(rule__Task__NameAssignment_1)
	{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getResponsableKeyword_2()); }
	'responsable'
	{ after(grammarAccess.getTaskAccess().getResponsableKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getResponsableAssignment_3()); }
	(rule__Task__ResponsableAssignment_3)
	{ after(grammarAccess.getTaskAccess().getResponsableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDescriptionKeyword_4()); }
	'description'
	{ after(grammarAccess.getTaskAccess().getDescriptionKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__5__Impl
	rule__Task__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDescriptionAssignment_5()); }
	(rule__Task__DescriptionAssignment_5)
	{ after(grammarAccess.getTaskAccess().getDescriptionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__6__Impl
	rule__Task__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getStartDateKeyword_6()); }
	'startDate'
	{ after(grammarAccess.getTaskAccess().getStartDateKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__7__Impl
	rule__Task__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getStartDateAssignment_7()); }
	(rule__Task__StartDateAssignment_7)
	{ after(grammarAccess.getTaskAccess().getStartDateAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__8__Impl
	rule__Task__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDurationKeyword_8()); }
	'duration'
	{ after(grammarAccess.getTaskAccess().getDurationKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__9__Impl
	rule__Task__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDurationAssignment_9()); }
	(rule__Task__DurationAssignment_9)
	{ after(grammarAccess.getTaskAccess().getDurationAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__10__Impl
	rule__Task__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDurationTypeAssignment_10()); }
	(rule__Task__DurationTypeAssignment_10)
	{ after(grammarAccess.getTaskAccess().getDurationTypeAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_11()); }
	(rule__Task__Group_11__0)?
	{ after(grammarAccess.getTaskAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_11__0__Impl
	rule__Task__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getSubtasksKeyword_11_0()); }
	'subtasks'
	{ after(grammarAccess.getTaskAccess().getSubtasksKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_11__1__Impl
	rule__Task__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_11_1()); }
	'{'
	{ after(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_11__2__Impl
	rule__Task__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getSubtasksAssignment_11_2()); }
	(rule__Task__SubtasksAssignment_11_2)*
	{ after(grammarAccess.getTaskAccess().getSubtasksAssignment_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_11__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_11__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_11__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_11_3()); }
	'}'
	{ after(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_11_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Company__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompanyAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCompanyAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__EmployeesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompanyAccess().getEmployeesEmployeeParserRuleCall_4_2_0()); }
		ruleEmployee
		{ after(grammarAccess.getCompanyAccess().getEmployeesEmployeeParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__ProjectsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompanyAccess().getProjectsProjectParserRuleCall_5_0()); }
		ruleProject
		{ after(grammarAccess.getCompanyAccess().getProjectsProjectParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmployeeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEmployeeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__WeightAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmployeeAccess().getWeightINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEmployeeAccess().getWeightINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__HeightAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmployeeAccess().getHeightINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEmployeeAccess().getHeightINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getTypeSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getProjectAccess().getTypeSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__TasksAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getTasksTaskParserRuleCall_4_0()); }
		ruleTask
		{ after(grammarAccess.getProjectAccess().getTasksTaskParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__ResponsableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getResponsableEmployeeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getTaskAccess().getResponsableEmployeeIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTaskAccess().getResponsableEmployeeIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getTaskAccess().getResponsableEmployeeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__DescriptionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getTaskAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__StartDateAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getStartDateDATETerminalRuleCall_7_0()); }
		RULE_DATE
		{ after(grammarAccess.getTaskAccess().getStartDateDATETerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__DurationAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getDurationINTTerminalRuleCall_9_0()); }
		RULE_INT
		{ after(grammarAccess.getTaskAccess().getDurationINTTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__DurationTypeAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getDurationTypeDurationTypeEnumRuleCall_10_0()); }
		ruleDurationType
		{ after(grammarAccess.getTaskAccess().getDurationTypeDurationTypeEnumRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__SubtasksAssignment_11_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getSubtasksTaskParserRuleCall_11_2_0()); }
		ruleTask
		{ after(grammarAccess.getTaskAccess().getSubtasksTaskParserRuleCall_11_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DATE : ('1'..'9'|(~('00')|'0'..'2' '0'..'9'|'3' '0'..'1')) '/' ('1'..'9'|'1' '0'..'2') '/' '1' '4'..'6';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
