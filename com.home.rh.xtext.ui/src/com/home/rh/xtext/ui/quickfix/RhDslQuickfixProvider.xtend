/*
 * generated by Xtext 2.10.0
 */
package com.home.rh.xtext.ui.quickfix

import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider
import com.home.rh.xtext.validation.RhDslValidator
import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.validation.Issue
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.ui.editor.model.edit.ISemanticModification
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext
import com.home.rh.xtext.rhDsl.Project
import com.home.rh.xtext.rhDsl.RhDslFactory
import com.home.rh.xtext.rhDsl.DurationType
import java.util.Date

/**
 * Custom quickfixes.
 *
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
class RhDslQuickfixProvider extends DefaultQuickfixProvider {

//	@Fix(RhDslValidator.INVALID_NAME)
//	def capitalizeName(Issue issue, IssueResolutionAcceptor acceptor) {
//		acceptor.accept(issue, 'Capitalize name', 'Capitalize the name.', 'upcase.png') [
//			context |
//			val xtextDocument = context.xtextDocument
//			val firstLetter = xtextDocument.get(issue.offset, 1)
//			xtextDocument.replace(issue.offset, 1, firstLetter.toUpperCase)
//		]
//	}

	@Fix(RhDslValidator.INVALID_HIGHT)
	def fixHight(Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, "fix hight", "Set the default hight to 95",null,
			[it.xtextDocument.replace(issue.offset, issue.length, "95")]
		)
	}
	
	@Fix(RhDslValidator.INVALID_TASKS_NUMBERS)
	def addDefaultTasks(Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, "add default tasks","add 2 default tasks", null, 
			new ISemanticModification{
				
				override apply(EObject element, IModificationContext context) throws Exception {
					val p = element as Project
					val t = createTask("defaultTask1")
					val t2 = createTask("defaultTask2")
					val t3 = createTask("defaultTask3")
					p.tasks.add(t)
					p.tasks.add(t2)
					p.tasks.add(t3)
					println(p.tasks)
				}
			}
		)
	}
	
	def createTask(String vname){
		val t = RhDslFactory.eINSTANCE.createTask
		t.name = vname
		t.duration = 3
		t.durationType = DurationType.DAYS
		t.description = "default task"
		t.startDate = "01/12/14"
		return t
	}
}
