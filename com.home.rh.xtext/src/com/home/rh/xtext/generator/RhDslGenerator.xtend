/*
 * generated by Xtext 2.10.0
 */
package com.home.rh.xtext.generator

import com.home.rh.xtext.rhDsl.Company
import com.home.rh.xtext.rhDsl.Task
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class RhDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))
	val company = resource.contents.head as Company
	
	fsa.generateFile(company.name +".txtcompany", getText(company))
	for (project : company.projects) {
		for (task : project.tasks) {
			fsa.generateFile(project.name +".txttask", getText(task))
		}
		
	} 
	
	}
	
	def getText(Company c)'''
	<html>
	<title>
	«c.name»
	</title>
	<h1>«c.name»</h1>
	</html>
	'''
	def getText(Task t)'''
	«t.description»
	'''
}
